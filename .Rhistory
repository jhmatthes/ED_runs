#  yearz <- as.numeric(strsplit(ann.files,"-")[[length(ann.files)]][3]) #last year
yearz <- 1888
agb.pft <- lai.pft <- bsa.pft <- dba.pft <- den.pft <- matrix(nrow=(yearz-yeara+1),ncol=length(pft))
for (y in yeara:yearz){
cat(" - Reading file :",ann.files[y-yeara+1],"...","\n")
now <- open.ncdf(paste(dat.dir,ann.files[y-yeara+1],sep=""))
#Grab cohort level variables.
ipft      <- get.var.ncdf(now,'PFT')
dbh       <- get.var.ncdf(now,'DBH')
nplant    <- get.var.ncdf(now,'NPLANT')
lai       <- get.var.ncdf(now,'LAI_CO')
agb       <- get.var.ncdf(now,'AGB_CO')
bsa       <- get.var.ncdf(now,'BA_CO')
dba_dt    <- get.var.ncdf(now,'DBA_DT')
#if any PFTs go extinct, make placeholders for averaging
if(length(unique(ipft))<length(pft)){
tmp  <- (length(pft)-length(unique(ipft)))
ipft <- c(ipft,pft[!(pft %in% ipft)])
agb  <- c(agb,rep(0,tmp))
lai  <- c(lai,rep(0,tmp))
bsa  <- c(bsa,rep(0,tmp))
nplant  <- c(nplant,rep(0,tmp))
dba_dt <- c(dba_dt,rep(0,tmp))
}
#PFT summaries
agb.pft[(y-yeara+1),] <- tapply(agb,ipft,sum)
lai.pft[(y-yeara+1),] <- tapply(lai,ipft,sum)
bsa.pft[(y-yeara+1),] <- tapply(bsa,ipft,sum)
den.pft[(y-yeara+1),] <- tapply(nplant,ipft,sum)
dba.pft[(y-yeara+1),] <- tapply(dba_dt,ipft,mean)
close.ncdf(now)
}
#}
years <- as.character((yeara:yearz)-1000)
year.date <- as.Date(years,"%Y")
#  png(paste(plot.path,sites[s],'_AGBbyPFT','.png',sep=''),width=900,height=600)
#  pdf(paste(plot.path,sites[s],"_spinup",sep=''))
plot(year.date,agb.pft[,1],col=pft.cols[5],pch=16,ylim=range(agb.pft),
xlab="spin-up date",ylab="Annual aboveground biomass [kg/m2]",
main=paste(site.names[s],": Spin-up",sep=""))
for(p in 2:ncol(agb.pft)){
points(year.date,agb.pft[,p],col=pft.cols[4+p],pch=16)
}
legend(year.date[2],max(agb.pft)-mean(agb.pft),pft.names[sort(unique(ipft))],col=pft.cols[5:10],pch=16)
plot(year.date,lai.pft[,1],col=pft.cols[5],pch=16,ylim=range(lai.pft),
xlab="spin-up date",ylab="Annual mean LAI [m2/m2]",
main=paste(site.names[s],": Spin-up",sep=""))
for(p in 2:ncol(lai.pft)){
points(year.date,lai.pft[,p],col=pft.cols[4+p],pch=16)
}
legend(year.date[2],max(lai.pft,na.rm=TRUE)-mean(lai.pft,na.rm=TRUE),pft.names[sort(unique(ipft))],col=pft.cols[5:10],pch=16)
plot(year.date,bsa.pft[,1],col=pft.cols[5],pch=16,ylim=range(bsa.pft),
xlab="spin-up date",ylab="Annual sum basal area [cm2/m2]",
main=paste(site.names[s],": Spin-up",sep=""))
for(p in 2:ncol(bsa.pft)){
points(year.date,bsa.pft[,p],col=pft.cols[4+p],pch=16)
}
legend(year.date[2],max(bsa.pft,na.rm=TRUE)-mean(bsa.pft,na.rm=TRUE),pft.names[sort(unique(ipft))],col=pft.cols[5:10],pch=16)
plot(year.date,den.pft[,1],col=pft.cols[5],pch=16,ylim=range(den.pft),
xlab="spin-up date",ylab="Annual sum of density [nplant/m2]",
main=paste(site.names[s],": Spin-up",sep=""))
for(p in 2:ncol(den.pft)){
points(year.date,den.pft[,p],col=pft.cols[4+p],pch=16)
}
legend(year.date[2],max(den.pft,na.rm=TRUE)-mean(den.pft,na.rm=TRUE),pft.names[sort(unique(ipft))],col=pft.cols[5:10],pch=16)
plot(year.date,dba.pft[,1],col=pft.cols[5],pch=16,ylim=c(-1,1),
xlab="spin-up date",ylab="Annual mean dba_dt",
main=paste(site.names[s],": Spin-up",sep=""))
for(p in 2:ncol(dba.pft)){
points(year.date,dba.pft[,p],col=pft.cols[4+p],pch=16)
}
legend(year.date[2],max(dba.pft,na.rm=TRUE)-mean(dba.pft,na.rm=TRUE),pft.names[sort(unique(ipft))],col=pft.cols[5:10],pch=16)
#This code processes and plots annual output from the ED2 model spinup period
#Jaclyn Hatala Matthes, 1/30/14
#jaclyn.hatala.matthes@gmail.com
#Load libraries
ok = require(chron,lib.loc="/usr4/spclpgm/jmatthes/"); if (! ok) stop("Package chron is not available...")
ok = require(ncdf,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package ncdf is not available...")
ok = require(maps,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package maps is not available...")
ok = require(sp,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package raster is not available...")
ok = require(raster,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package raster is not available...")
ok = require(colorspace,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package raster is not available...")
#Set sites
sites <- c("PBL","PHA","PMB","PDL","PHO","PUN")
site.names <- c("Billy's Lake","Harvard Forest","Minden Bog","Demming Lake","Howland Forest","UNDERC")
#Names and colors for all PFTs, so it works for tropical and temperate.
pft.names = c("C4 grass"          ,"Early tropical"    ,"Mid tropical"
,"Late tropical"     ,"Temperate C3 Grass","North Pine"
,"South Pine"        ,"Late conifer"      ,"Early hardwood"
,"Mid hardwood"      ,"Late hardwood"     ,"C3 crop"
,"C3 pasture"        ,"C4 crop"           ,"C4 pasture"
,"C3 grass"          ,"Araucaria"         ,"Total"             )
pft.cols  = c("gold"              ,"chartreuse"        ,"chartreuse4"
,"#004E00"           ,"mediumpurple1"     ,"deepskyblue"
,"mediumturquoise"   ,"royalblue4"        , "darkorange"
,"orangered"         ,"firebrick4"         , "purple4"
,"darkorchid1"       ,"darkgoldenrod"     ,   "khaki"
,"lightgoldenrod3"   ,"steelblue3"        ,   "grey22"         )
n.pft     = length(pft.names) - 1
pft <- c(5,6,8,9,10,11)
#for(s in 1:length(sites)){
s <- 4
#Set directories
dat.dir    <- paste("/projectnb/cheas/paleon/ED_runs/phase1a_spinfinish/",sites[s],"/analy/",sep="")
match.files <- grep("-Y-",list.files(dat.dir))
files <- list.files(dat.dir)
ann.files  <- files[match.files] #yearly files only
#Get time window
yeara <- as.numeric(strsplit(ann.files,"-")[[1]][3]) #first year
#  yearz <- as.numeric(strsplit(ann.files,"-")[[length(ann.files)]][3]) #last year
yearz <- 1888
agb.pft <- lai.pft <- bsa.pft <- dba.pft <- den.pft <- matrix(nrow=(yearz-yeara+1),ncol=length(pft))
for (y in yeara:yearz){
cat(" - Reading file :",ann.files[y-yeara+1],"...","\n")
now <- open.ncdf(paste(dat.dir,ann.files[y-yeara+1],sep=""))
#Grab cohort level variables.
ipft      <- get.var.ncdf(now,'PFT')
dbh       <- get.var.ncdf(now,'DBH')
nplant    <- get.var.ncdf(now,'NPLANT')
lai       <- get.var.ncdf(now,'LAI_CO')
agb       <- get.var.ncdf(now,'AGB_CO')
bsa       <- get.var.ncdf(now,'BA_CO')
dba_dt    <- get.var.ncdf(now,'DBA_DT')
#if any PFTs go extinct, make placeholders for averaging
if(length(unique(ipft))<length(pft)){
tmp  <- (length(pft)-length(unique(ipft)))
ipft <- c(ipft,pft[!(pft %in% ipft)])
agb  <- c(agb,rep(0,tmp))
lai  <- c(lai,rep(0,tmp))
bsa  <- c(bsa,rep(0,tmp))
nplant  <- c(nplant,rep(0,tmp))
dba_dt <- c(dba_dt,rep(0,tmp))
}
#PFT summaries
agb.pft[(y-yeara+1),] <- tapply(agb,ipft,sum)
lai.pft[(y-yeara+1),] <- tapply(lai,ipft,sum)
bsa.pft[(y-yeara+1),] <- tapply(bsa,ipft,sum)
den.pft[(y-yeara+1),] <- tapply(nplant,ipft,sum)
dba.pft[(y-yeara+1),] <- tapply(dba_dt,ipft,mean)
close.ncdf(now)
}
#}
years <- as.character((yeara:yearz)-1000)
year.date <- as.Date(years,"%Y")
#  png(paste(plot.path,sites[s],'_AGBbyPFT','.png',sep=''),width=900,height=600)
#  pdf(paste(plot.path,sites[s],"_spinup",sep=''))
plot(year.date,agb.pft[,1],col=pft.cols[5],pch=16,ylim=range(agb.pft),
xlab="spin-up date",ylab="Annual aboveground biomass [kg/m2]",
main=paste(site.names[s],": Spin-up",sep=""))
for(p in 2:ncol(agb.pft)){
points(year.date,agb.pft[,p],col=pft.cols[4+p],pch=16)
}
legend(year.date[2],max(agb.pft)-mean(agb.pft),pft.names[sort(unique(ipft))],col=pft.cols[5:10],pch=16)
plot(year.date,lai.pft[,1],col=pft.cols[5],pch=16,ylim=range(lai.pft),
xlab="spin-up date",ylab="Annual mean LAI [m2/m2]",
main=paste(site.names[s],": Spin-up",sep=""))
for(p in 2:ncol(lai.pft)){
points(year.date,lai.pft[,p],col=pft.cols[4+p],pch=16)
}
legend(year.date[2],max(lai.pft,na.rm=TRUE)-mean(lai.pft,na.rm=TRUE),pft.names[sort(unique(ipft))],col=pft.cols[5:10],pch=16)
plot(year.date,bsa.pft[,1],col=pft.cols[5],pch=16,ylim=range(bsa.pft),
xlab="spin-up date",ylab="Annual sum basal area [cm2/m2]",
main=paste(site.names[s],": Spin-up",sep=""))
for(p in 2:ncol(bsa.pft)){
points(year.date,bsa.pft[,p],col=pft.cols[4+p],pch=16)
}
legend(year.date[2],max(bsa.pft,na.rm=TRUE)-mean(bsa.pft,na.rm=TRUE),pft.names[sort(unique(ipft))],col=pft.cols[5:10],pch=16)
plot(year.date,den.pft[,1],col=pft.cols[5],pch=16,ylim=range(den.pft),
xlab="spin-up date",ylab="Annual sum of density [nplant/m2]",
main=paste(site.names[s],": Spin-up",sep=""))
for(p in 2:ncol(den.pft)){
points(year.date,den.pft[,p],col=pft.cols[4+p],pch=16)
}
legend(year.date[2],max(den.pft,na.rm=TRUE)-mean(den.pft,na.rm=TRUE),pft.names[sort(unique(ipft))],col=pft.cols[5:10],pch=16)
plot(year.date,dba.pft[,1],col=pft.cols[5],pch=16,ylim=c(-1,1),
xlab="spin-up date",ylab="Annual mean dba_dt",
main=paste(site.names[s],": Spin-up",sep=""))
for(p in 2:ncol(dba.pft)){
points(year.date,dba.pft[,p],col=pft.cols[4+p],pch=16)
}
legend(year.date[2],max(dba.pft,na.rm=TRUE)-mean(dba.pft,na.rm=TRUE),pft.names[sort(unique(ipft))],col=pft.cols[5:10],pch=16)
#This code processes and plots annual output from the ED2 model spinup period
#Jaclyn Hatala Matthes, 1/30/14
#jaclyn.hatala.matthes@gmail.com
#Load libraries
ok = require(chron,lib.loc="/usr4/spclpgm/jmatthes/"); if (! ok) stop("Package chron is not available...")
ok = require(ncdf,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package ncdf is not available...")
ok = require(maps,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package maps is not available...")
ok = require(sp,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package raster is not available...")
ok = require(raster,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package raster is not available...")
ok = require(colorspace,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package raster is not available...")
#Set sites
sites <- c("PBL","PHA","PMB","PDL","PHO","PUN")
site.names <- c("Billy's Lake","Harvard Forest","Minden Bog","Demming Lake","Howland Forest","UNDERC")
#Names and colors for all PFTs, so it works for tropical and temperate.
pft.names = c("C4 grass"          ,"Early tropical"    ,"Mid tropical"
,"Late tropical"     ,"Temperate C3 Grass","North Pine"
,"South Pine"        ,"Late conifer"      ,"Early hardwood"
,"Mid hardwood"      ,"Late hardwood"     ,"C3 crop"
,"C3 pasture"        ,"C4 crop"           ,"C4 pasture"
,"C3 grass"          ,"Araucaria"         ,"Total"             )
pft.cols  = c("gold"              ,"chartreuse"        ,"chartreuse4"
,"#004E00"           ,"mediumpurple1"     ,"deepskyblue"
,"mediumturquoise"   ,"royalblue4"        , "darkorange"
,"orangered"         ,"firebrick4"         , "purple4"
,"darkorchid1"       ,"darkgoldenrod"     ,   "khaki"
,"lightgoldenrod3"   ,"steelblue3"        ,   "grey22"         )
n.pft     = length(pft.names) - 1
pft <- c(5,6,8,9,10,11)
#for(s in 1:length(sites)){
s <- 5
#Set directories
dat.dir    <- paste("/projectnb/cheas/paleon/ED_runs/phase1a_spinfinish/",sites[s],"/analy/",sep="")
match.files <- grep("-Y-",list.files(dat.dir))
files <- list.files(dat.dir)
ann.files  <- files[match.files] #yearly files only
#Get time window
yeara <- as.numeric(strsplit(ann.files,"-")[[1]][3]) #first year
#  yearz <- as.numeric(strsplit(ann.files,"-")[[length(ann.files)]][3]) #last year
yearz <- 1888
agb.pft <- lai.pft <- bsa.pft <- dba.pft <- den.pft <- matrix(nrow=(yearz-yeara+1),ncol=length(pft))
for (y in yeara:yearz){
cat(" - Reading file :",ann.files[y-yeara+1],"...","\n")
now <- open.ncdf(paste(dat.dir,ann.files[y-yeara+1],sep=""))
#Grab cohort level variables.
ipft      <- get.var.ncdf(now,'PFT')
dbh       <- get.var.ncdf(now,'DBH')
nplant    <- get.var.ncdf(now,'NPLANT')
lai       <- get.var.ncdf(now,'LAI_CO')
agb       <- get.var.ncdf(now,'AGB_CO')
bsa       <- get.var.ncdf(now,'BA_CO')
dba_dt    <- get.var.ncdf(now,'DBA_DT')
#if any PFTs go extinct, make placeholders for averaging
if(length(unique(ipft))<length(pft)){
tmp  <- (length(pft)-length(unique(ipft)))
ipft <- c(ipft,pft[!(pft %in% ipft)])
agb  <- c(agb,rep(0,tmp))
lai  <- c(lai,rep(0,tmp))
bsa  <- c(bsa,rep(0,tmp))
nplant  <- c(nplant,rep(0,tmp))
dba_dt <- c(dba_dt,rep(0,tmp))
}
#PFT summaries
agb.pft[(y-yeara+1),] <- tapply(agb,ipft,sum)
lai.pft[(y-yeara+1),] <- tapply(lai,ipft,sum)
bsa.pft[(y-yeara+1),] <- tapply(bsa,ipft,sum)
den.pft[(y-yeara+1),] <- tapply(nplant,ipft,sum)
dba.pft[(y-yeara+1),] <- tapply(dba_dt,ipft,mean)
close.ncdf(now)
}
#}
years <- as.character((yeara:yearz)-1000)
year.date <- as.Date(years,"%Y")
#  png(paste(plot.path,sites[s],'_AGBbyPFT','.png',sep=''),width=900,height=600)
#  pdf(paste(plot.path,sites[s],"_spinup",sep=''))
plot(year.date,agb.pft[,1],col=pft.cols[5],pch=16,ylim=range(agb.pft),
xlab="spin-up date",ylab="Annual aboveground biomass [kg/m2]",
main=paste(site.names[s],": Spin-up",sep=""))
for(p in 2:ncol(agb.pft)){
points(year.date,agb.pft[,p],col=pft.cols[4+p],pch=16)
}
legend(year.date[2],max(agb.pft)-mean(agb.pft),pft.names[sort(unique(ipft))],col=pft.cols[5:10],pch=16)
plot(year.date,lai.pft[,1],col=pft.cols[5],pch=16,ylim=range(lai.pft),
xlab="spin-up date",ylab="Annual mean LAI [m2/m2]",
main=paste(site.names[s],": Spin-up",sep=""))
for(p in 2:ncol(lai.pft)){
points(year.date,lai.pft[,p],col=pft.cols[4+p],pch=16)
}
legend(year.date[2],max(lai.pft,na.rm=TRUE)-mean(lai.pft,na.rm=TRUE),pft.names[sort(unique(ipft))],col=pft.cols[5:10],pch=16)
plot(year.date,bsa.pft[,1],col=pft.cols[5],pch=16,ylim=range(bsa.pft),
xlab="spin-up date",ylab="Annual sum basal area [cm2/m2]",
main=paste(site.names[s],": Spin-up",sep=""))
for(p in 2:ncol(bsa.pft)){
points(year.date,bsa.pft[,p],col=pft.cols[4+p],pch=16)
}
legend(year.date[2],max(bsa.pft,na.rm=TRUE)-mean(bsa.pft,na.rm=TRUE),pft.names[sort(unique(ipft))],col=pft.cols[5:10],pch=16)
plot(year.date,den.pft[,1],col=pft.cols[5],pch=16,ylim=range(den.pft),
xlab="spin-up date",ylab="Annual sum of density [nplant/m2]",
main=paste(site.names[s],": Spin-up",sep=""))
for(p in 2:ncol(den.pft)){
points(year.date,den.pft[,p],col=pft.cols[4+p],pch=16)
}
legend(year.date[2],max(den.pft,na.rm=TRUE)-mean(den.pft,na.rm=TRUE),pft.names[sort(unique(ipft))],col=pft.cols[5:10],pch=16)
plot(year.date,dba.pft[,1],col=pft.cols[5],pch=16,ylim=c(-1,1),
xlab="spin-up date",ylab="Annual mean dba_dt",
main=paste(site.names[s],": Spin-up",sep=""))
for(p in 2:ncol(dba.pft)){
points(year.date,dba.pft[,p],col=pft.cols[4+p],pch=16)
}
legend(year.date[2],max(dba.pft,na.rm=TRUE)-mean(dba.pft,na.rm=TRUE),pft.names[sort(unique(ipft))],col=pft.cols[5:10],pch=16)
#This code processes and plots annual output from the ED2 model spinup period
#Jaclyn Hatala Matthes, 1/30/14
#jaclyn.hatala.matthes@gmail.com
#Load libraries
ok = require(chron,lib.loc="/usr4/spclpgm/jmatthes/"); if (! ok) stop("Package chron is not available...")
ok = require(ncdf,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package ncdf is not available...")
ok = require(maps,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package maps is not available...")
ok = require(sp,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package raster is not available...")
ok = require(raster,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package raster is not available...")
ok = require(colorspace,lib.loc="/usr4/spclpgm/jmatthes/") ; if (! ok) stop("Package raster is not available...")
#Set sites
sites <- c("PBL","PHA","PMB","PDL","PHO","PUN")
site.names <- c("Billy's Lake","Harvard Forest","Minden Bog","Demming Lake","Howland Forest","UNDERC")
#Names and colors for all PFTs, so it works for tropical and temperate.
pft.names = c("C4 grass"          ,"Early tropical"    ,"Mid tropical"
,"Late tropical"     ,"Temperate C3 Grass","North Pine"
,"South Pine"        ,"Late conifer"      ,"Early hardwood"
,"Mid hardwood"      ,"Late hardwood"     ,"C3 crop"
,"C3 pasture"        ,"C4 crop"           ,"C4 pasture"
,"C3 grass"          ,"Araucaria"         ,"Total"             )
pft.cols  = c("gold"              ,"chartreuse"        ,"chartreuse4"
,"#004E00"           ,"mediumpurple1"     ,"deepskyblue"
,"mediumturquoise"   ,"royalblue4"        , "darkorange"
,"orangered"         ,"firebrick4"         , "purple4"
,"darkorchid1"       ,"darkgoldenrod"     ,   "khaki"
,"lightgoldenrod3"   ,"steelblue3"        ,   "grey22"         )
n.pft     = length(pft.names) - 1
pft <- c(5,6,8,9,10,11)
#for(s in 1:length(sites)){
s <- 6
#Set directories
dat.dir    <- paste("/projectnb/cheas/paleon/ED_runs/phase1a_spinfinish/",sites[s],"/analy/",sep="")
match.files <- grep("-Y-",list.files(dat.dir))
files <- list.files(dat.dir)
ann.files  <- files[match.files] #yearly files only
#Get time window
yeara <- as.numeric(strsplit(ann.files,"-")[[1]][3]) #first year
#  yearz <- as.numeric(strsplit(ann.files,"-")[[length(ann.files)]][3]) #last year
yearz <- 1888
agb.pft <- lai.pft <- bsa.pft <- dba.pft <- den.pft <- matrix(nrow=(yearz-yeara+1),ncol=length(pft))
for (y in yeara:yearz){
cat(" - Reading file :",ann.files[y-yeara+1],"...","\n")
now <- open.ncdf(paste(dat.dir,ann.files[y-yeara+1],sep=""))
#Grab cohort level variables.
ipft      <- get.var.ncdf(now,'PFT')
dbh       <- get.var.ncdf(now,'DBH')
nplant    <- get.var.ncdf(now,'NPLANT')
lai       <- get.var.ncdf(now,'LAI_CO')
agb       <- get.var.ncdf(now,'AGB_CO')
bsa       <- get.var.ncdf(now,'BA_CO')
dba_dt    <- get.var.ncdf(now,'DBA_DT')
#if any PFTs go extinct, make placeholders for averaging
if(length(unique(ipft))<length(pft)){
tmp  <- (length(pft)-length(unique(ipft)))
ipft <- c(ipft,pft[!(pft %in% ipft)])
agb  <- c(agb,rep(0,tmp))
lai  <- c(lai,rep(0,tmp))
bsa  <- c(bsa,rep(0,tmp))
nplant  <- c(nplant,rep(0,tmp))
dba_dt <- c(dba_dt,rep(0,tmp))
}
#PFT summaries
agb.pft[(y-yeara+1),] <- tapply(agb,ipft,sum)
lai.pft[(y-yeara+1),] <- tapply(lai,ipft,sum)
bsa.pft[(y-yeara+1),] <- tapply(bsa,ipft,sum)
den.pft[(y-yeara+1),] <- tapply(nplant,ipft,sum)
dba.pft[(y-yeara+1),] <- tapply(dba_dt,ipft,mean)
close.ncdf(now)
}
#}
years <- as.character((yeara:yearz)-1000)
year.date <- as.Date(years,"%Y")
#  png(paste(plot.path,sites[s],'_AGBbyPFT','.png',sep=''),width=900,height=600)
#  pdf(paste(plot.path,sites[s],"_spinup",sep=''))
plot(year.date,agb.pft[,1],col=pft.cols[5],pch=16,ylim=range(agb.pft),
xlab="spin-up date",ylab="Annual aboveground biomass [kg/m2]",
main=paste(site.names[s],": Spin-up",sep=""))
for(p in 2:ncol(agb.pft)){
points(year.date,agb.pft[,p],col=pft.cols[4+p],pch=16)
}
legend(year.date[2],max(agb.pft)-mean(agb.pft),pft.names[sort(unique(ipft))],col=pft.cols[5:10],pch=16)
plot(year.date,lai.pft[,1],col=pft.cols[5],pch=16,ylim=range(lai.pft),
xlab="spin-up date",ylab="Annual mean LAI [m2/m2]",
main=paste(site.names[s],": Spin-up",sep=""))
for(p in 2:ncol(lai.pft)){
points(year.date,lai.pft[,p],col=pft.cols[4+p],pch=16)
}
legend(year.date[2],max(lai.pft,na.rm=TRUE)-mean(lai.pft,na.rm=TRUE),pft.names[sort(unique(ipft))],col=pft.cols[5:10],pch=16)
plot(year.date,bsa.pft[,1],col=pft.cols[5],pch=16,ylim=range(bsa.pft),
xlab="spin-up date",ylab="Annual sum basal area [cm2/m2]",
main=paste(site.names[s],": Spin-up",sep=""))
for(p in 2:ncol(bsa.pft)){
points(year.date,bsa.pft[,p],col=pft.cols[4+p],pch=16)
}
legend(year.date[2],max(bsa.pft,na.rm=TRUE)-mean(bsa.pft,na.rm=TRUE),pft.names[sort(unique(ipft))],col=pft.cols[5:10],pch=16)
plot(year.date,den.pft[,1],col=pft.cols[5],pch=16,ylim=range(den.pft),
xlab="spin-up date",ylab="Annual sum of density [nplant/m2]",
main=paste(site.names[s],": Spin-up",sep=""))
for(p in 2:ncol(den.pft)){
points(year.date,den.pft[,p],col=pft.cols[4+p],pch=16)
}
legend(year.date[2],max(den.pft,na.rm=TRUE)-mean(den.pft,na.rm=TRUE),pft.names[sort(unique(ipft))],col=pft.cols[5:10],pch=16)
plot(year.date,dba.pft[,1],col=pft.cols[5],pch=16,ylim=c(-1,1),
xlab="spin-up date",ylab="Annual mean dba_dt",
main=paste(site.names[s],": Spin-up",sep=""))
for(p in 2:ncol(dba.pft)){
points(year.date,dba.pft[,p],col=pft.cols[4+p],pch=16)
}
legend(year.date[2],max(dba.pft,na.rm=TRUE)-mean(dba.pft,na.rm=TRUE),pft.names[sort(unique(ipft))],col=pft.cols[5:10],pch=16)
library(ncdf,lib.loc="/usr4/spclpgm/jmatthes/")
nd.path    <- "/projectnb/cheas/paleon/met_regional/fix_precip/nadp/"
nd.files   <- list.files(paste(nd.path,"allsites/",sep=""))
nd.files
nd.sites   <- read.csv(paste(nd.path,nadp_sites.csv,sep=""))
nd.sites   <- read.csv(paste(nd.path,"nadp_sites.csv",sep=""))
nd.sites[1:10,]
nd.files
nd.site.info   <- read.csv(paste(nd.path,"nadp_sites.csv",sep=""))
nd.sites <- 0
nd.sites
f <- 1
substring(nd.files[f],4)
substring(nd.files[f],1,4)
nd.sites <- vector()
for(f in 1:length(nd.files)){
nd.sites[f] <- substring(nd.files[f],1,4)
}
nd.sites
nd.site.info$siteid
as.text(nd.site.info$siteid)
as.string(nd.site.info$siteid)
nd.site.info   <- read.csv(paste(nd.path,"nadp_sites.csv",sep=""),stringsAsFactors=FALSE)
nd.site.info[1:10,]
nd.site.info$siteid
nd.site.info$state
nd.ind <- nd.sites %in% nd.site.info$siteid
nd.ind
nd.ind <- nd.site.info$siteid %in% nd.sites
nd.ind
nd.ind <- which(nd.site.info$siteid %in% nd.sites)
nd.ind
nd.site.info <- nd.site.info[nd.ind,c(1,7,8)]
nd.site.info
basedir <- "/projectnb/cheas/paleon/met_regional/phase1b_met_drivers/"
outpath <- "/projectnb/cheas/paleon/met_regional/phase1b_met_drivers/precipf_corr/"
beg.yr  <- 850
end.yr  <- 2010
n.samps <- 500
#constants
dpm   <- c(1,31,28,31,30,31,30,31,31,30,31,30,31) #days per month
dpm.l <- c(1,31,29,31,30,31,30,31,31,30,31,30,31) #leap year days per month
inch2mm <- 2.54*10
day2sec <- 1/(24*60*60)
sec26hr <- 60*60*6
fillv   <- 1e+30
pl.files <- list.files(basedir)
length(pl.files)
basedir
basedir <- "/projectnb/cheas/paleon/met_regional/phase1b_met_regional/"
outpath <- "/projectnb/cheas/paleon/met_regional/phase1b_met_regional/precipf_corr/"
pl.files <- list.files(basedir)
length(pl.files)
pl.files
basedir <- "/projectnb/cheas/paleon/met_regional/phase1b_met_regional/precipf/"
outpath <- "/projectnb/cheas/paleon/met_regional/phase1b_met_regional/corr_precipf/"
pl.files <- list.files(basedir)
length(pl.files)
pl.files
nc.file <- open.ncdf(pl.files[f])
f
f <- 1
length(pl.files)
nc.file <- open.ncdf(paste(basedir,pl.files[f],sep=""))
data <- get.var.ncdf(nc.file,"precipf")
time <- get.var.ncdf(nc.file,"time")
lat  <- get.var.ncdf(nc.file,"lat")
lon  <- get.var.ncdf(nc.file,"lon")
dim(data)
dim(time)
dim(lat)
dim(lon)
lat
lon
data[,,1]
expand.grid(lon,lat)
ll.grid <- expand.grid(lon,lat)
ll.grid[1:10]
ll.grid[1:10,]
data[1,1,1]
junk <- as.vector(data[,,1])
junk[1]
junk[2]
data[1,2,1]
data[2,1,1]
library(fields,lib.loc="/usr4/spclpgm/jmatthes/")
library(spam,lib.loc="/usr4/spclpgm/jmatthes/")
library(fields,lib.loc="/usr4/spclpgm/jmatthes/")
image.plot(data[,,1])
data[1,1,1] <- 100
image.plot(data[,,1])
data[2,1,1] <- 100
image.plot(data[,,1])
ll.grid[1:10,]
junk <- as.vector(data[,,1])
junk[1:10]
t <- 1
new.dat.vec <- vector(length(data))
new.dat.vec <- vector(NA,length=length(data))
new.dat.vec <- vector(length=length(data))
new.dat.vec[1:10]
new.dat.vec <- rep(NA,length=length(data))
new.dat.vec[1:10]
t <- 1
p <- 1
!is.na(dat.vec[p])
dat.vec <- as.vector(data[,,t])
!is.na(dat.vec[p])
library(sp,lib.loc="/usr4/spclpgm/jmatthes/")
library(rgeos,lib.loc="/usr4/spclpgm/jmatthes/")
install.packages("rgeos",lib="/usr4/spclpgm/jmatthes/")
install.packages("rgeos", lib = "/usr4/spclpgm/jmatthes/")
library(rgeos,lib.loc="/usr4/spclpgm/jmatthes/")
